name: Build Windows dependencies

on:
  push:
  
  pull_request: # This handles PR creation and subsequent commits.

  schedule:
    # Midnight build every day
    - cron: "0 0 * * *"

  # This allows manual triggering of the workflow from the web
  workflow_dispatch:
    inputs:
      SKIP_DEPS_CACHE:
        description: 'Skip dependencies caching'
        required: true
        default: 'false'

env:
  SKIP_DEPS_CACHE: 'false'
  QT5_MODULES: 'debug_info qtcharts qtdatavis3d qtlottie qtnetworkauth qtquick3d qtquicktimeline qtscript qtwebengine qtwebglplugin'
  ROCKY_QT5_ARCHIVES: 'icu qt3d qtbase qtconnectivity qtdeclarative qtgraphicaleffects qtimageformats qtlocation qtmultimedia qtquickcontrols qtquickcontrols2 qtremoteobjects qtscxml qtsensors qtsvg qttools qttranslations qtwayland qtwebchannel qtwebsockets qtwebview qtx11extras qtxmlpatterns'
  MACOX_X86_64_QT5_ARCHIVES: 'd3dcompiler_47 opengl32sw qt3d qtactiveqt qtbase qtconnectivity qtdeclarative qtgraphicaleffects qtimageformats qtlocation qtmultimedia qtquickcontrols qtquickcontrols2 qtremoteobjects qtscxml qtsensors qtsvg qttools qttranslations qtwebchannel qtwebsockets qtwebview qtwinextras qtxmlpatterns'
  WINDOWS_QT5_ARCHIVES: 'd3dcompiler_47 opengl32sw qt3d qtactiveqt qtbase qtconnectivity qtdeclarative qtgraphicaleffects qtimageformats qtlocation qtmultimedia qtquickcontrols qtquickcontrols2 qtremoteobjects qtscxml qtsensors qtsvg qttools qttranslations qtwebchannel qtwebsockets qtwebview qtwinextras qtxmlpatterns'

  ROCKY_QT6_MODULES: 'debug_info qt3d qt5compat qtcharts qtconnectivity qtdatavis3d qtgrpc qthttpserver qtimageformats qtlanguageserver qtlocation qtlottie qtmultimedia qtnetworkauth qtpdf qtpositioning qtquick3d qtquick3dphysics qtquickeffectmaker qtquicktimeline qtremoteobjects qtscxml qtsensors qtserialbus qtserialport qtshadertools qtspeech qtvirtualkeyboard qtwaylandcompositor qtwebchannel qtwebengine qtwebsockets qtwebview'
  ROCKY_QT6_ARCHIVES: 'icu qtbase qtdeclarative qtsvg qttools qttranslations qtwayland'
  MACOX_X86_64_QT6_MODULES: 'debug_info qt3d qt5compat qtcharts qtconnectivity qtdatavis3d qtgrpc qthttpserver qtimageformats qtlanguageserver qtlocation qtlottie qtmultimedia qtnetworkauth qtpdf qtpositioning qtquick3d qtquick3dphysics qtquickeffectmaker qtquicktimeline qtremoteobjects qtscxml qtsensors qtserialbus qtserialport qtshadertools qtspeech qtvirtualkeyboard qtwebchannel qtwebengine qtwebsockets qtwebview'
  MACOX_X86_64_QT6_ARCHIVES: 'qtbase qtdeclarative qtsvg qttools qttranslations'
  WINDOWS_QT6_MODULES: 'debug_info qt3d qt5compat qtactiveqt qtcharts qtconnectivity qtdatavis3d qtgrpc qthttpserver qtimageformats qtlanguageserver qtlocation qtlottie qtmultimedia qtnetworkauth qtpdf qtpositioning qtquick3d qtquick3dphysics qtquickeffectmaker qtquicktimeline qtremoteobjects qtscxml qtsensors qtserialbus qtserialport qtshadertools qtspeech qtvirtualkeyboard qtwebchannel qtwebengine qtwebsockets qtwebview'
  WINDOWS_QT6_ARCHIVES: 'd3dcompiler_47 opengl32sw qtbase qtdeclarative qtsvg qttools qttranslations'

jobs:
  windows:
    if : ${{ github.repository_owner == 'cedrik-fuoco-adsk' }}
    name: 'Windows ${{ matrix.vfx-platform }}
      <${{ matrix.os }}
       msvc=${{ matrix.msvc-component }},
       qt=${{ matrix.qt-version }},
       python=${{ matrix.python-version }},
       cmake=${{ matrix.cmake-version }},
       arch=${{ matrix.arch-type }},
       config=${{ matrix.build-type }}>'

    strategy:
      fail-fast: false
      matrix:
        include:
          # VFX2024
          - os: "windows-2022"
            arch-type: "x86_64"
            build-type: "Release"
            qt-version: "6.5.3"
            python-version: "3.11"
            cmake-version: "3.31.6"
            vfx-platform: "CY2024"
            msvc-component: "14.40.17.10.x86.x64"
            msvc-compiler: "14.40.33807"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # 4.1.7
        with:
          submodules: recursive

      - name: Install MSVC components ${{ matrix.msvc-component }}
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToRemove= @(
            "Microsoft.VisualStudio.Component.VC.${{ matrix.msvc-component }}"
            "Microsoft.VisualStudio.Component.VC.1${{ matrix.msvc-component }}.Spectre"
          )
          [string]$workloadArgs = $componentsToRemove | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
          # should be run twice
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          
      - name: Set up MSVC ${{ matrix.msvc-compiler }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: ${{ matrix.msvc-compiler }}
          arch: '${{ matrix.arch-type }}'

      - name: Activate Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # 5.2.0
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Display Python installation location
        run: |
          python -c "import sys; print(sys.executable)"

      - name: Cache CMake for Windows
        uses: actions/cache@v4
        id: windows-cmake-cache
        with:
          path: "C:/Program Files/CMake"
          key: ${{ runner.os }}-cmake-${{ matrix.cmake-version }}

      - name: Install CMake ${{ matrix.cmake-version }} with chocolatey
        if: steps.windows-cmake-cache.outputs.cache-hit != 'true'
        run: |
          choco install cmake --version=${{ matrix.cmake-version }} --allow-downgrade
